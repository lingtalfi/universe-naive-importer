Usage
-------

The word item is defined like this:
- item: itemId | itemName
- itemId: repositoryId.itemName | repositoryAlias.itemName


# import/install
uni init                                # creates the universe/bigbang.php file and the universe/BumbleBee dir if they don't exist
uni import {item}                       # import an item and its dependencies, skip already existing item(s)/dependencies (use uni list to see the available items)
uni import -f {item}                    # import an item and its dependencies, replace already existing item(s)/dependencies
uni importall {repoId}?                 # import all items at once, skip already existing item(s)/dependencies
uni importall {repoId}? -f              # import all items at once, replace already existing item(s)/dependencies
uni reimport-existing {repoId}?         # re-import all existing items at once, replace already existing item(s)/dependencies
uni install {item}                      # install an item and its dependencies, will import them if necessary, skip already existing item(s)/dependencies
uni install -f {item}                   # install an item and its dependencies, will import them if necessary, replace already existing item(s)/dependencies
uni installall {repoId}?                # install all items at once, will import them if necessary, skip already existing item(s)/dependencies
uni installall {repoId}? -f             # install all items at once, will import them if necessary, replace already existing item(s)/dependencies
uni uninstall {item}                    # call the uninstall method on the given item and dependencies
uni zimport {item}                      # import an item and its dependencies (skip already existing items) by creating a symlink to the local repo instead of fetching the planet on the web (an order of magnitude faster)
uni zimport {item} -f                   # import an item and its dependencies (replace already existing items) by creating a symlink to the local repo instead of fetching the planet on the web (an order of magnitude faster)
uni updateall                           # update all items at once


# list/search
uni list {repoAlias}?                   # list available items
uni listd {repoAlias}?                  # list available items with their description if any
uni listimported                        # list imported items
uni listinstalled                       # list installed items
uni search {term} {repoAlias}?          # search through available items names
uni searchd {term} {repoAlias}?         # search through available items names and/or description

# local (shared) repo
uni setlocalrepo {repoPath}             # set the local repository path
uni getlocalrepo                        # print the local repository path
uni todir                               # converts the top level items of the import directory to directories (based on the directories in local repo)
uni tolink                              # converts the top level items of the import directory to symlinks to the directories in local repo


# utilities
uni clean                               # removes the .git, .gitignore, .idea and .DS_Store files in your items directories, recursively
uni update                              # update the uni command with the latest definitions (it does a simple git pull, so is assumes you cloned the uni command in the first place)
uni reimport-existing                              # update the uni command with the latest definitions (it does a simple git pull, so is assumes you cloned the uni command in the first place)




Examples:
    uni init
    uni import BabyYaml
    uni import ling.BabyYaml
    uni import -f BabyYaml
    uni import -f ling.BabyYaml
    uni importall
    uni importall -f
    uni updateall
    uni reimport-existing
    uni zimport Connexion
    uni zimport Connexion -f
    uni list
    uni list km
    uni listd
    uni listd km
    uni listimported
    uni listinstalled
    uni search ling
    uni search ling km
    uni searchd kaminos
    uni searchd kaminos km
    uni setlocalrepo /path/to/local/repo
    uni getlocalrepo
    uni tolink
    uni todir
    uni clean
    uni update