#!/usr/bin/env php
<?php


use ApplicationItemManager\Importer\GithubImporter;


use ApplicationItemManager\LingApplicationItemManager;
use ApplicationItemManager\Program\ApplicationItemManagerProgram;


use CommandLineInput\ProgramOutputAwareCommandLineInput;
use Output\ProgramOutput;
use Output\WebProgramOutput;
use Uni\LingUniverseProgram;
use Uni\LingUniverseRepository;

//--------------------------------------------
// UNIVERSE PROGRAM
//--------------------------------------------
/**
 * As for now, the universe doesn't have any special installer,
 * so we don't need to initialize an environment for them (but plans are made
 * to change that in the future though).
 * We can simply call any autoloader that we want.
 */
require_once __DIR__ . "/class-program/bigbang.php";


$appDir = getcwd();
$importDir = $appDir . "/planets";
if (!is_dir($importDir) && $appDir === __DIR__) {
    $importDir = $appDir . "/class-program";
}


$helpFile = __DIR__ . "/class-program/help.txt";


$shortopts = '';
$longopts = array(
    "output-type-web",
);
$options = getopt($shortopts, $longopts);
/**
 * You might need this option if a program --called from the web by the user--
 * calls a program internally (but you still need to display the output of the uni command
 * to the web screen).
 */

if (array_key_exists("output-type-web", $options)) {
    $output = WebProgramOutput::create();
} else {
    $output = ProgramOutput::create();
}


$manager = LingApplicationItemManager::create()
    ->setOutput($output)
    ->addRepository(LingUniverseRepository::create())
    ->setFavoriteRepositoryId('ling')
    ->bindImporter('ling', GithubImporter::create()->setGithubRepoName("lingtalfi"))
    ->setImportDirectory($importDir);


$input = ProgramOutputAwareCommandLineInput::create($argv)
    ->setProgramOutput($output)
    ->addFlag("f")
    ->addFlag("v");

LingUniverseProgram::create()
    ->setHelpFile($helpFile)
    ->setDefaultCommand("help")
    ->setManager($manager)
    ->setInput($input)
    ->setOutput($output)
    ->setImportDirectory($importDir)
    ->start();